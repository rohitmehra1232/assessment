/*
 * This file is generated by jOOQ.
 */
package com.assessment.assessment.database.tables.daos;


import com.assessment.assessment.database.tables.IqSurgeryDept;
import com.assessment.assessment.database.tables.records.IqSurgeryDeptRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IqSurgeryDeptDao extends DAOImpl<IqSurgeryDeptRecord, com.assessment.assessment.database.tables.pojos.IqSurgeryDept, Long> {

    /**
     * Create a new IqSurgeryDeptDao without any configuration
     */
    public IqSurgeryDeptDao() {
        super(IqSurgeryDept.IQ_SURGERY_DEPT, com.assessment.assessment.database.tables.pojos.IqSurgeryDept.class);
    }

    /**
     * Create a new IqSurgeryDeptDao with an attached configuration
     */
    public IqSurgeryDeptDao(Configuration configuration) {
        super(IqSurgeryDept.IQ_SURGERY_DEPT, com.assessment.assessment.database.tables.pojos.IqSurgeryDept.class, configuration);
    }

    @Override
    public Long getId(com.assessment.assessment.database.tables.pojos.IqSurgeryDept object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchById(Long... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.assessment.assessment.database.tables.pojos.IqSurgeryDept fetchOneById(Long value) {
        return fetchOne(IqSurgeryDept.IQ_SURGERY_DEPT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchOptionalById(Long value) {
        return fetchOptional(IqSurgeryDept.IQ_SURGERY_DEPT.ID, value);
    }

    /**
     * Fetch records that have <code>surgery_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfSurgeryName(String lowerInclusive, String upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.SURGERY_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>surgery_name IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchBySurgeryName(String... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.SURGERY_NAME, values);
    }

    /**
     * Fetch records that have <code>due_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfDueDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.DUE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>due_date IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchByDueDate(LocalDateTime... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.DUE_DATE, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfUpdatedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchByUpdatedBy(Long... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfIsDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchByIsDeleted(Boolean... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>deleted_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfDeletedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.DELETED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_on IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchByDeletedOn(LocalDateTime... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.DELETED_ON, values);
    }

    /**
     * Fetch records that have <code>deleted_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchRangeOfDeletedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSurgeryDept.IQ_SURGERY_DEPT.DELETED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_by IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSurgeryDept> fetchByDeletedBy(Long... values) {
        return fetch(IqSurgeryDept.IQ_SURGERY_DEPT.DELETED_BY, values);
    }
}
