/*
 * This file is generated by jOOQ.
 */
package com.assessment.assessment.database.tables.daos;


import com.assessment.assessment.database.tables.IqSpecializationDoctorMapping;
import com.assessment.assessment.database.tables.records.IqSpecializationDoctorMappingRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IqSpecializationDoctorMappingDao extends DAOImpl<IqSpecializationDoctorMappingRecord, com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping, Long> {

    /**
     * Create a new IqSpecializationDoctorMappingDao without any configuration
     */
    public IqSpecializationDoctorMappingDao() {
        super(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING, com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping.class);
    }

    /**
     * Create a new IqSpecializationDoctorMappingDao with an attached
     * configuration
     */
    public IqSpecializationDoctorMappingDao(Configuration configuration) {
        super(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING, com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping.class, configuration);
    }

    @Override
    public Long getId(com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchById(Long... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping fetchOneById(Long value) {
        return fetchOne(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchOptionalById(Long value) {
        return fetchOptional(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.ID, value);
    }

    /**
     * Fetch records that have <code>doctor_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfDoctorId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.DOCTOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>doctor_id IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchByDoctorId(Long... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.DOCTOR_ID, values);
    }

    /**
     * Fetch records that have <code>specialization_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfSpecializationId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.SPECIALIZATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>specialization_id IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchBySpecializationId(Long... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.SPECIALIZATION_ID, values);
    }

    /**
     * Fetch records that have <code>iq_specializationcol BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfIqSpecializationcol(String lowerInclusive, String upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.IQ_SPECIALIZATIONCOL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>iq_specializationcol IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchByIqSpecializationcol(String... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.IQ_SPECIALIZATIONCOL, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfCreatedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchByCreatedBy(Long... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.UPDATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfUpdatedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchByUpdatedBy(Long... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>client_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchRangeOfClientId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.CLIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_id IN (values)</code>
     */
    public List<com.assessment.assessment.database.tables.pojos.IqSpecializationDoctorMapping> fetchByClientId(Integer... values) {
        return fetch(IqSpecializationDoctorMapping.IQ_SPECIALIZATION_DOCTOR_MAPPING.CLIENT_ID, values);
    }
}
